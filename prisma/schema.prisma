// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output = "./node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Camion{
  id String @id @default(uuid())
  libelle String
  factures FactureImport[]
}
model Client {
  id String @id @default(uuid())
  nom_client String?
  code String?
  num_nif String?
  adresse String?
  telephone String?
  email String?
  rccm String?
  idNat String?
  isFacturedForImport String? @db.Char(1)
  isFacturedForExport String? @db.Char(1)
  isFacturedForTva String? @db.Char(1)
  lastPrintedDeclation DateTime?
  enabled String? @default("A")
  paiement Paiement[]
  journalType JournalType[]
}

model DetailFacture{
  id String @id @default(uuid())
  factureId String?
  facture FactureImport? @relation(fields: [factureId],references: [id])
  contenu Json
}

model FactureImport {
  id String @id @default(uuid())
  dossier String? 
  dateFacture DateTime?
  journalTypeId String
  journalType JournalType @relation(fields: [journalTypeId],references: [id])
  manifeste String?
  t1 String?
  camionId String
  camion Camion @relation(fields: [camionId],references: [id])
  marchandiseId String
  marchandise Marchandise @relation(fields: [marchandiseId],references: [id])
  declarationId String?
  declarationDate DateTime?
  liquidationId String?
  liquidationDate DateTime?
  quittanceId String?
  quittanceDate DateTime?
  quittanceMontant Float @default(0)
  poids String?
  colis String?
  status STATUSFACTURE @default(B)
  createdAt DateTime @default(now())
  detailFacture DetailFacture[]
  montant Float? @default(0)
  typeFact TYPEFACTURATION? @default(C)
  niveauSaisie NIVEAUSAISIE @default(R)
  numeroFacture String?
}
model FraisSupplementaire{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  vehicule String?
  montant Float @default(0)
  devise DEVISE
  isFactured Boolean @default(false)
  journalTypeId String?
  journalType JournalType? @relation(fields: [journalTypeId],references: [id])
}
model Journal{
  id String @id @default(uuid())
  journalTypeId String?
  journalType JournalType? @relation(fields: [journalTypeId],references: [id])
  numero Int @default(0)
}

// Exemple : CLD, SOMIKA IMPORT
model JournalType{
  id String @id @default(uuid())
  libelle String
  journals Journal[]
  formatJournal String
  ClientId String
  Client Client @relation(fields: [ClientId],references: [id])
  FactureImport FactureImport[]
  fraisAdditionnel FraisSupplementaire[]
  paiementImport PaiementImport[]
  referencePaiementImport ReferencePaiementImport[]
  derniereImpression String? @default("")
  dernierImprSydonia String? @default("")
  solde Float? @default(0)
}
model Marchandise{
  id String @id @default(uuid())
  libelle String
  factures FactureImport[]
}

model Paiement {
  id String @id @default(uuid())
  datePaiement DateTime 
  motif String?
  montant Float
  idClient String
  archived Boolean @default(false)
  createdAt DateTime @default(now())
  client Client @relation(fields: [idClient], references: [id])
  status StatusRow @default(A)
  numeroInvoice String? @default("")
}
model PaiementImport {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  journalTypeId String
  journalType JournalType @relation(fields: [journalTypeId], references: [id])
  referencePaiementImportId String?
  referencePaiementImport ReferencePaiementImport? @relation(fields: [referencePaiementImportId],references: [id])
  montant Float
  justification String?
  fichier String?
  datePaiement DateTime
}
model ReferencePaiementImport {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  journalTypeId String?
  journalType JournalType? @relation(fields: [journalTypeId], references: [id])
  paiementImport PaiementImport[]
  libelle String
  montant Float @default(0)
  dateReference DateTime?
  description String?
}
model RubriqueFacture{
  id String @id @default(uuid())
  produit String?
  libelle String?
  identifiant String
  compte String?
  compteAnalytique String?
}
model Utilisateur {
  id    String     @id @default(uuid())
  name  String?
  login String
  role String @db.Char(2)
  password String?
  status StatusRow @default(A)
}
enum STATUSFACTURE {
  B  //Brouillon
  C  //Comptabilis√©
}
enum StatusRow {
  A
  B
  D
}
enum TYPEFACTURATION {
  G //Global
  C //Consommable
  E //Equipement
}
enum NIVEAUSAISIE {
  R //Rapide
  A //Automatique
  N //Normale
}
enum DEVISE {
  USD
  CDF
}


